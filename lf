#! /bin/bash
#title           :lf - large files finder cli command
#description     :generating a list of the largest files on a desire directory
#author		 :Ofir Elhayani
#date            :08-06-2014
#version         :0.1
#usage		 :lf [-h|--help] [-n|--num-result] number <destination-dir>
		 # if a number was not entered after -n it will act at default
		 # which is 10 results
#notes           :try and have fun :-) if you find anything to improve i'll be glad to learn.
Usage()			# usage procedure for producing error messages.
{
	if [ -n "$1" ]; then echo $1; fi			
	echo "usage: lf [-h|--help] [-n|--num-result] <number> <destination dir>";exit 1;
}
Chk_dir()
{

	if [ ! -d $dest_dir ];	# checking if destination exists
	then
	Usage "error: directory does not exist";exit 1;
	fi
}
Large_files()   
{
	Chk_dir;
		if [ $user_id -eq 1 ];
		then
		echo -e "user is not sudo or root, results could be different\ndue to access restrictions\n"
		fi
	find $dest_dir -type f -printf "%s %f\n" 2>/dev/null | sort -rh | sed 's/ /./2g' | #finding the files and converting spaces in filenames to dots. 
		awk '{ hum[1024**4]="TB"; hum[1024**3]="GB"; hum[1024**2]="MB"; hum[1024]="KB"; hum[0]="B"; #awk command to
      		for (x=1024**4; x>=1024; x/=1024){							# transfer the bytes 
         		if ($1>=x) { printf "%3.1f%s\t%s\n",$1/x,hum[x],$2;break }			#into human readable format
      		}}' | head -n $num_result
exit 0;
}
dest_dir="$1"
id | grep -e 'root' -e 'sudo' > /dev/null
user_id=$?
	if [ -z $dest_dir ];		# checking if destination entered
	then
	Usage "error: no destination entered";exit 1;
	else
		case "$1" in
			"-h" | "--help") Usage;exit 0;;
			"-n" | "--num-result") 
						num_result=$2
						number='^[0-9]+$'
						[[ $num_result =~ [0-9]+.[0-9]+ ]] && Usage "error: use only integer numbers." && exit 1;
							if ! [[ $num_result =~ $number ]]
							then
							dest_dir=$num_result
							Chk_dir;
							echo -e "no number was entered after -n option\nacting at default - 10 results\n"							
							num_result=10
							Large_files
							else
							dest_dir=$3
							Large_files
							fi;;			
			"/"*) num_result=10; Large_files;;
				*) Usage "error: option does not exist";;		
		esac
	fi	
